/**
 * MARK: - Collapsible
 */

fieldset:where(.collapsible) {
  --_spacing: 0.5lh;

  > .wrapper { /* column flow */
    min-inline-size: 100%;
    background-color: var(--surface-2);

    /* > * + * { margin-block-start: calc(var(--_spacing)/2) } */

    > :first-child {
      margin-block-start: var(--_spacing)
    }

    > :last-child {
      margin-block-end: var(--_spacing)
    }
  }

  &:last-child { margin-block-end: 1px } /* border bottom */
}

/* #region accordion-like styling */
[id=filters] > div:has(> fieldset + fieldset) {
  display: grid; /* NOTE set borders between */
  gap: 1px;
  background: var(--surface-2);

  & :where(fieldset, legend) {
    max-inline-size: 100%;
    background: var(--surface-1); /* panel surface */
  }

  & :where(legend) { /* reset default view */
    inline-size: 100%;
    display: inline-flex;

    > label { /* add a visual indicator for the accordion disclosure */
      inline-size: 100%;
      block-size: 100%;
      padding: 1ch 2ex;
      user-select: none;

      --_icon-size: 20px;
      --_scale-duration: .2s;
      --_scale-ease: ease-in-out;

      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 1ch;

      > span {
        position: relative;
        display: inline-block;
        inline-size: var(--_icon-size);
        block-size: var(--_icon-size);
        aspect-ratio: 1;
        border-radius: var(--rounded);
      }

      > span::after {
        position: absolute;
        inset: 0;
        scale: 1;
        transform-origin: 50% 50%;

        /* chevron icon */
        content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' %3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M19.5 8.25l-7.5 7.5-7.5-7.5' /%3E%3C/svg%3E%0A");
      }

      @media (prefers-reduced-motion: no-preference) {
        > span::after {
          transition:
            scale var(--_scale-duration) var(--_scale-ease);
        }
      }

      @media (prefers-color-scheme: dark) {
        > span::after {
          filter: invert(1);
        }
      }
    }

    > input[id^=open]:checked ~ label > span::after {
      /* rotate: -180deg; */
      scale: -1;
    }
  }
}

/* https://github.com/w3c/csswg-drafts/issues/10939 */
/* https://codepen.io/shshaw/pen/jOZerqG
   https://codepen.io/jh3y/pen/dyBYzpv
   https://codepen.io/bramus/pen/YzBLyLm */

.collapsible { /* fieldset */
  > .wrapper {
    padding-inline: 2ex;
    /* max-inline-size: fit-content; */

    max-height: 0;
    overflow: hidden;
    animation: none 0.5s ease-in-out;
  }

  > .wrapper {
    animation-name: close;
  }

  :has([id^=open]:checked) ~ .wrapper {
    max-height: none;
    animation-name: open;
  }
}

@keyframes close {
  0% {
    max-height: 100vh;
  }
  100% {
    max-height: 0;
  }
}

@keyframes open {
  0% {
    max-height: 0;
  }
  99% {
    max-height: 100vh;
  }
  100% {
    max-height: none;
  }
}
/* #endregion */
